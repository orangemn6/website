<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ricing on Jacob Goldstein&#39;s Website</title>
    <link>https://jacobgoldstein.tk/categories/ricing/</link>
    <description>Recent content in ricing on Jacob Goldstein&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Jan 2021 12:05:56 -0500</lastBuildDate><atom:link href="https://jacobgoldstein.tk/categories/ricing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Preset Layouts in I3</title>
      <link>https://jacobgoldstein.tk/posts/using-preset-layouts-in-i3/</link>
      <pubDate>Thu, 14 Jan 2021 12:05:56 -0500</pubDate>
      
      <guid>https://jacobgoldstein.tk/posts/using-preset-layouts-in-i3/</guid>
      <description>While I already knew how to launch programs with my i3 config file, I was lacking a way to predefine specific workspace layouts that I would want to launch on startup.
Thatâ€™s where i3 layouts come in handy.
The first step in creating a layout is to spawn the windows you want to be launched when the layout is deployed.
In this example I created a monitor layout, which I use to monitor system stats, crypto prices, the news, and more.</description>
    </item>
    
    <item>
      <title>Linux Ricing and How I Do It (just the basics)</title>
      <link>https://jacobgoldstein.tk/posts/linux-ricing-and-how-i-do-it-just-the-basics/</link>
      <pubDate>Tue, 01 Dec 2020 13:15:49 -0500</pubDate>
      
      <guid>https://jacobgoldstein.tk/posts/linux-ricing-and-how-i-do-it-just-the-basics/</guid>
      <description>Everyone is always asking me, how do I rice linux so fast? And The answer is, I just have the some bash scripts set to keybinds. For the i3 window manager.
Script 1: Pywal So for this one you need pywal.
wal -i $HOME/Pictures/wallpapers -o wal-set Script 2: Sublime text theme This is a python script
#! /usr/bin/env python import json import os def make_element(name, scope, **kwargs): &amp;#34;&amp;#34;&amp;#34;Helper function for generating color scheme entries&amp;#34;&amp;#34;&amp;#34; result = {} result[&amp;#39;name&amp;#39;] = name result[&amp;#39;scope&amp;#39;] = scope result.</description>
    </item>
    
  </channel>
</rss>
